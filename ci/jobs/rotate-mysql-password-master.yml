jobs:
  - name: rotate-mysql-password-master-development
    plan:
      - get: secrets-management
        trigger: false
      - .: (( inject meta.plan.rotate-mysql-master-password ))
        config:
          params:
            AWS_ACC: ((aws_account.development))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
          inputs:
            - name: secrets-management

  - name: rotate-mysql-password-master-qa
    plan:
      - get: secrets-management
        trigger: false
      - .: (( inject meta.plan.rotate-master-password ))
        config:
          params:
            AWS_ACC: ((aws_account.qa))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
          inputs:
            - name: secrets-management

  - name: rotate-mysql-password-master-integration
    plan:
      - get: secrets-management
        trigger: false
      - .: (( inject meta.plan.rotate-master-password ))
        config:
          params:
            AWS_ACC: ((aws_account.integration))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.integration)):role/ci
          inputs:
            - name: secrets-management

  - name: rotate-mysql-password-master-preprod
    plan:
      - get: secrets-management
        trigger: false
      - .: (( inject meta.plan.rotate-master-password ))
        config:
          params:
            AWS_ACC: ((aws_account.preprod))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
          inputs:
            - name: secrets-management

  - name: rotate-mysql-password-master-production
    plan:
      - get: secrets-management
        trigger: false
      - .: (( inject meta.plan.rotate-master-password ))
        config:
          params:
            AWS_ACC: ((aws_account.production))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.production)):role/ci
          inputs:
            - name: secrets-management
