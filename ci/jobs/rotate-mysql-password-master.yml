jobs:
  - name: rotate-mysql-master-password
    max_in_flight: 1
    plan:
      - get: secrets-management
        trigger: false
      - task: rotate-mysql-password-master
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: dwpdigital/awscli
              tag: 0.0.6
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
            AWS_REGION: ((dataworks.aws_region))
            AWS_DEFAULT_REGION: ((dataworks.aws_region))
            AWS_ACCOUNT_ID: ((aws_account.development))
          run:
            path: sh
            args:
              - -exc
              - |
                pip install boto3
                ./rotate_rds_master_user_password_update_secrets_manager $AWS_ACCOUNT_ID $AWS_REGION ci hive-metastore metadata-store-hive
            dir: secrets-management
          inputs:
            - name: secrets-management




#jobs:
#  - name: rotate-mysql-password-master-development
#    plan:
#      - .: (( inject meta.plan.rotate-master-password ))
#        config:
#          params:
#            AWS_ACC: ((aws_account.development))
#            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
#
#  - name: rotate-mysql-password-master-qa
#    plan:
#      - .: (( inject meta.plan.rotate-master-password ))
#        config:
#          params:
#            AWS_ACC: ((aws_account.qa))
#            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
#
#  - name: rotate-mysql-password-master-integration
#    plan:
#      - .: (( inject meta.plan.rotate-master-password ))
#        config:
#          params:
#            AWS_ACC: ((aws_account.integration))
#            AWS_ROLE_ARN: arn:aws:iam::((aws_account.integration)):role/ci
#
#  - name: rotate-mysql-password-master-preprod
#    plan:
#      - .: (( inject meta.plan.rotate-master-password ))
#        config:
#          params:
#            AWS_ACC: ((aws_account.preprod))
#            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
#
#  - name: rotate-mysql-password-master-production
#    plan:
#      - .: (( inject meta.plan.rotate-master-password ))
#        config:
#          params:
#            AWS_ACC: ((aws_account.production))
#            AWS_ROLE_ARN: arn:aws:iam::((aws_account.production)):role/ci